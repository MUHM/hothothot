// Code generated by goctl. DO NOT EDIT!
// Source: crawler.proto

//go:generate mockgen -destination ./crawler_mock.go -package crawlerclient -source $GOFILE

package crawlerclient

import (
	"context"

	"hothothot/service/crawler/rpc/crawler"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	WeatherReq    = crawler.WeatherReq
	WeatherResp   = crawler.WeatherResp
	WeatherNoResp = crawler.WeatherNoResp
	ZhiHuReq      = crawler.ZhiHuReq
	ZhiHuResp     = crawler.ZhiHuResp
	ZhiHuNoResp   = crawler.ZhiHuNoResp

	Crawler interface {
		RunZhiHu(ctx context.Context, in *ZhiHuReq) (*ZhiHuNoResp, error)
		RunWeather(ctx context.Context, in *WeatherReq) (*WeatherNoResp, error)
	}

	defaultCrawler struct {
		cli zrpc.Client
	}
)

func NewCrawler(cli zrpc.Client) Crawler {
	return &defaultCrawler{
		cli: cli,
	}
}

func (m *defaultCrawler) RunZhiHu(ctx context.Context, in *ZhiHuReq) (*ZhiHuNoResp, error) {
	client := crawler.NewCrawlerClient(m.cli.Conn())
	return client.RunZhiHu(ctx, in)
}

func (m *defaultCrawler) RunWeather(ctx context.Context, in *WeatherReq) (*WeatherNoResp, error) {
	client := crawler.NewCrawlerClient(m.cli.Conn())
	return client.RunWeather(ctx, in)
}
